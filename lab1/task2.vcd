$date
2022-09-03T18:36+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module task2 $end
 $var wire 8 ! count $end
 $var wire 8 " _GEN_2 $end
 $var wire 1 # _T $end
 $var wire 8 $ _a_T_1 $end
 $var wire 9 % _count_T $end
 $var wire 8 & _count_T_1 $end
 $var wire 8 ' _GEN_1 $end
 $var wire 8 ( _count_T_3 $end
 $var wire 8 ) a $end
 $var wire 8 * _GEN_4 $end
 $var wire 1 + clock $end
 $var wire 8 , io_counter $end
 $var wire 8 - _GEN_0 $end
 $var wire 9 . _a_T $end
 $var wire 9 / _count_T_2 $end
 $var wire 1 0 reset $end
 $var wire 8 1 _GEN_3 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000 (
b00000000 )
b00000000 !
b00000000 "
b00000000 1
b000000000 %
b00000000 *
00
b00000000 $
b000000000 .
0#
b00000000 ,
b00000000 -
b000000000 /
0+
b00000000 &
b00000000 '
$end
#0
10
b000000001 %
b00000001 1
b000000001 .
b00000001 &
1#
b00000001 $
b11111111 (
b111111111 /
#1
1+
#6
00
0+
#11
b00000001 !
b00000001 -
b000000010 %
b00000010 1
b00000010 &
b00000001 '
1+
b00000000 (
b000000000 /
b00000001 ,
#16
0+
#21
b00000010 !
b00000010 -
b000000011 %
b00000011 1
b00000011 &
b00000010 '
1+
b00000001 (
b000000001 /
b00000010 ,
#26
0+
#31
b00000011 !
b00000011 -
b000000100 %
b00000100 1
b00000100 &
b00000011 '
1+
b00000010 (
b000000010 /
b00000011 ,
#36
0+
#41
b00000100 !
b00000100 -
b000000101 %
b00000101 1
b00000101 &
b00000100 '
1+
b00000011 (
b000000011 /
b00000100 ,
#46
0+
#51
b00000101 !
b00000101 -
b000000110 %
b00000110 1
b00000110 &
b00000101 '
1+
b00000100 (
b000000100 /
b00000101 ,
#56
0+
#61
b00000110 !
b00000110 -
b000000111 %
b00000111 1
b00000111 &
b00000110 '
1+
b00000101 (
b000000101 /
b00000110 ,
#66
0+
#71
b00000111 !
b00000111 -
b000001000 %
b00001000 1
b00001000 &
b00000111 '
1+
b00000110 (
b000000110 /
b00000111 ,
#76
0+
#81
b00001000 !
b00001000 -
b000001001 %
b00001001 1
b00001001 &
b00001000 '
1+
b00000111 (
b000000111 /
b00001000 ,
#86
0+
#91
b00001001 !
b00001001 -
b000001010 %
b00001010 1
b00001010 &
b00001001 '
1+
b00001000 (
b000001000 /
b00001001 ,
#96
0+
#101
b00001010 !
b00001010 -
b000001011 %
b00000001 "
b00001001 1
b00001011 &
0#
b00000001 *
1+
b00001001 (
b000001001 /
b00001010 ,
#106
0+
#111
b00001000 -
b000001010 %
b000000010 .
b00001010 &
b00001000 '
b00001000 (
b000001000 /
b00000001 )
b00001001 !
b00001000 1
1#
b00000010 $
1+
b00001001 ,
#116
0+
#121
b00001000 !
b00000111 -
b000001001 %
b00000111 1
b00001001 &
b00000111 '
1+
b00000111 (
b000000111 /
b00001000 ,
#126
0+
#131
b00000111 !
b00000110 -
b000001000 %
b00000110 1
b00001000 &
b00000110 '
1+
b00000110 (
b000000110 /
b00000111 ,
#136
0+
#141
b00000110 !
b00000101 -
b000000111 %
b00000101 1
b00000111 &
b00000101 '
1+
b00000101 (
b000000101 /
b00000110 ,
#146
0+
#151
b00000101 !
b00000100 -
b000000110 %
b00000100 1
b00000110 &
b00000100 '
1+
b00000100 (
b000000100 /
b00000101 ,
#156
0+
#161
b00000100 !
b00000011 -
b000000101 %
b00000011 1
b00000101 &
b00000011 '
1+
b00000011 (
b000000011 /
b00000100 ,
#166
0+
#171
b00000011 !
b00000010 -
b000000100 %
b00000010 1
b00000100 &
b00000010 '
1+
b00000010 (
b000000010 /
b00000011 ,
#176
0+
#181
b00000010 !
b00000001 -
b000000011 %
b00000001 1
b00000011 &
b00000001 '
1+
b00000001 (
b000000001 /
b00000010 ,
#186
0+
#191
b00000001 !
b00000000 -
b000000010 %
b00000000 1
b00000010 &
b00000000 '
1+
b00000000 (
b000000000 /
b00000001 ,
#196
0+
#201
b00000000 !
b11111111 -
b000000001 %
b11111111 1
b00000001 &
b11111111 '
1+
b11111111 (
b111111111 /
b00000000 ,
#206
0+
#211
b11111111 !
b11111110 -
b100000000 %
b11111110 1
b00000000 &
0#
b11111110 '
1+
b11111110 (
b011111110 /
b11111111 ,
#216
0+
